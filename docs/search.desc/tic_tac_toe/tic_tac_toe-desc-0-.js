searchState.loadedDescShard("tic_tac_toe", 0, "A generic game board for tic-tac-toe and similar games.\nA two-dimensional game board.\nA single cell on the game board.\nInternal wrapper around a 1D vector of cells.\nThe cell is empty.\nError types used by the board module.\nThe board size is too small.\nThe cell is occupied by the given player (0 = first …\nConfiguration for how the board is printed.\nReturns a vector of all columns.\nReturns a vector of all diagonals.\nReturns a vector of all rows.\nWidth of each cell in characters.\nBoard cells stored in a 1D vector.\nChecks the actual state of the game.\nResets all cells to empty.\nReturns an iterator over the given column.\nReturns an iterator over the given diagonal. <code>pos</code> - start …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the reference of the given cell, or <code>None</code> if out of …\nReturns the board as 1D vector of cell states.\nReturns the board as 1D mut vector of cell states.\nReturns a vector of all possible moves.\nReturns the mut reference of the given cell, or <code>None</code> if …\nReturns the board dimensions as (rows, columns).\nConverts a (row, col) pair into a 1D index.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the given cell is empty.\nReturns <code>true</code> if all cells are empty.\nReturns <code>true</code> if all cells are full.\nChecks if the move is legal.\nTries to make a move.\nCreates a new game board with the given dimensions.\nSymbols for the players (e.g. [‘X’, ‘O’]).\nPretty-prints the board using the given setup.\nReturns an iterator over the given row.\nTic-tac-toe rules for the generic game board.\nAttempts to set a cell to the given value. Returns <code>true</code> if …\nBoard dimensions: (rows, columns).\nSome simple tests.\nSome simple tests.\nActual game state.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")